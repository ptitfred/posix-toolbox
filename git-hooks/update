#!/usr/bin/env bash

#==============================================================================
# The MIT License
#
# Copyright (c) 2010-, Frédéric Menou
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#==============================================================================

refname="$1"
oldrev="$2"
newrev="$3"

PATH=~/bin:$PATH

if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run ">&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "Usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
sender=$(git config push.mail.sender)
maildest=$(git config push.mail.tos)

if [ -z "$maildest" ]; then
	exit 0
fi

oldshort=$(git short $oldrev)
newshort=$(git short $newrev)
branch=$(echo $refname | sed ':^/refs/heads/:!d' | wc -l )
tag=$(echo $refname | sed ':^/refs/tags/:!d' | wc -l)

if [ $branch == 1 ]; then
	branchname=$(echo $refname | cut -b12-)
	if [ "$oldrev" != "0000000000000000000000000000000000000000" ]; then
		subject="push on $branchname"
		content=$(git shortlog $oldrev..$newrev)
		echo $branchname $oldrev..$newrev
	else
		subject="new branch $branchname"
		echo $subject
	fi
elif [ $tag == 1 ]; then
	tagname=$(echo $refname | cut -b11-)
	subject="new tag $tagname"
	echo $subject
fi

cat <<EOF | sendmail -t
From: $sender
To: $maildest
Subject: $subject
Content-type: text/html
<html><body> 
<h4>Contenu du push sur proto</h4>
<code>$oldshort..$newshort</code>
<pre>$content</pre>
</body></html>
EOF

